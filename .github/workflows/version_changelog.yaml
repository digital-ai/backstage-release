name: Versioning and tag/release creation

on:
  workflow_call:
    inputs:
      plugin-path:
        required: true
        type: string
      plugin:
        required: true
        type: string

jobs:
  bump-version:
    name: Bump Version & Create GitHub Tag
    runs-on: ubuntu-latest
    outputs:
      new-version: ${{ steps.version-bump.outputs.newTag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # necessary to get newly created tag above
          ref: 'S-114659-GA'  # need to map it to main branch
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.19.0
      - name: Automated Version Bump
        id: version-bump
        uses: phips28/gh-action-bump-version@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PACKAGEJSON_DIR: ${{ inputs.plugin-path }}
        with:
          commit-message: "CI: bumps version to {{version}} [skip ci]"
          tag-prefix:  '${{ inputs.plugin }}/v'
          major-wording: 'MAJOR'
          minor-wording: 'MINOR'
          preid: 'alpha'
          target-branch: 'S-114659-GA' # need to map it to main branch
      - name: Extract Module Changelog Sections from PR Description
        id: update-changelog
        run: |
          # Extract PR body content
          echo "$PR_BODY" > pr_body.txt          
         
          # Initialize an empty CHANGELOG variable             
          CHANGELOG=$(sed -n '/### ${{ inputs.plugin }} Changelog Begin/,/^### dai-/p' pr_body.txt   | sed '1d;$d')
          # Verify extraction result          
          echo -e "Captured Changelog Sections:\n$CHANGELOG"
          echo "::set-output name=changelog::$CHANGELOG"
          echo -e "\n## ${{ steps.version-bump.outputs.newTag  }} - $(date +'%Y-%m-%d')\n $CHANGELOG" >> ${{ inputs.plugin-path }}/CHANGE_LOG.md
        env:
          PR_BODY: ${{ github.event.pull_request.body }}
      - name: Commit and Push Updated Changelogs
        id: commit-changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add ${{ inputs.plugin-path }}/CHANGE_LOG.md
          git commit -m "Update ${{ inputs.plugin }}CHANGE_LOG.md files"
          git push origin 'S-114659-GA' # need to map it to main branch

  changelog:
    name: Generate Changelog
    runs-on: ubuntu-latest
    needs: [bump-version]
    outputs:
      changelog-sha: ${{ steps.commit.outputs.commit_sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: 'S-114659-GA'

      - name: Generate Changelog
        uses: fabernovel/github-changelog-generator-action@master
        with:
          # https://github.com/github-changelog-generator/github-changelog-generator/wiki/Advanced-change-log-generation-examples#additional-options
          options: --token ${{ secrets.GITHUB_TOKEN }} --date-format %m/%d/%Y --output CHANGE_LOG.md --enhancement-label **Features:** --enhancement-labels enhancement --pr-label **Misc:** --bug-labels defect --exclude-labels documentation,question,release --breaking-labels BREAKING-CHANGE --since-tag 1.0.0 --unreleased-label Current Release --release-url https://www.npmjs.com/package/@digital-ai/dot-components --github-site https://digital-ai.github.io/dot-components/?path=/story/introduction--page --http-cache true --no-issues

      # https://github.com/marketplace/actions/add-commit
      - name: Commit and Push Changelog
        id: commit
        uses: EndBug/add-and-commit@v9
        with:
          add: CHANGE_LOG.md
          default_author: github_actions
          message: 'Update Changelog'
          pull: '--rebase --autostash'

      # https://github.com/EndBug/add-and-commit/issues/341
      - name: Generate Changelog SHA
        id: generate_sha
        run: echo "{long_sha}={$(git rev-parse ${{ steps.commit.outputs.commit_sha }})}" >> $GITHUB_OUTPUT

      - name: Print Changelog SHA
        run: echo ${{ steps.generate_sha.outputs.long_sha }}
