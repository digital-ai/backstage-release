name: Github publish

on:
  workflow_call:
    inputs:
      plugin-path:
        required: true
        type: string

jobs:
  github-publish:
    name: Publish Latest to Github registry
    runs-on: ubuntu-latest
    env:
      NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref_name }}  # need to map it to main branch
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          always-auth: true
          node-version: '18.x'
          registry-url: 'https://npm.pkg.github.com'
      - name: Install dot-icon from npm registry - Configure npm to use npm registry for @digital-ai scope
        if: ${{ inputs.plugin-path == './plugins/dai-release' }}
        run: |
          npm config set @digital-ai:registry https://registry.npmjs.org/
      - name: Install dot-icon from npm registry.
        if: ${{ inputs.plugin-path == './plugins/dai-release' }}
        working-directory: ${{ inputs.plugin-path }}
        run: |
          yarn add @digital-ai/dot-icons --registry=https://registry.npmjs.org/
      - name: Install dot-icon from npm registry - Reset npm config.
        if: ${{ inputs.plugin-path == './plugins/dai-release' }}
        run: |
          npm config delete @digital-ai:registry
      - name: Configure npm to use both GitHub and npm registries
        if: ${{ inputs.plugin-path == './plugins/dai-release' }}
        run: |
            npm config set @digital-ai:registry https://npm.pkg.github.com
            npm config set //npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}
      - name: Install dependencies
        working-directory: ${{ inputs.plugin-path }}
        run: yarn install
      - name: Run tsc
        working-directory: ${{ inputs.plugin-path }}
        run: yarn tsc
      - name: Build
        working-directory: ${{ inputs.plugin-path }}
        run: yarn build
      - name: Run tests
        working-directory: ${{ inputs.plugin-path }}
        run: yarn test
      - name: Publish to registry
        working-directory: ${{ inputs.plugin-path }}
        run: yarn publish