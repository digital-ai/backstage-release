name: Versioning and tag/release creation

on:
  workflow_call:
    inputs:
      plugin-path:
        required: true
        type: string
      plugin:
        required: true
        type: string

jobs:
  bump-version:
    name: Bump Version & Create GitHub Tag
    runs-on: ubuntu-latest
    outputs:
      new-version: ${{ steps.version-bump.outputs.newTag }}
    env:
      PR_BODY: ${{ github.event.pull_request.body }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # necessary to get newly created tag above
          ref: ${{ github.ref_name }}  # need to map it to main branch
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.19.0
      - name: Automated Version Bump
        id: version-bump
        uses: phips28/gh-action-bump-version@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PACKAGEJSON_DIR: ${{ inputs.plugin-path }}
        with:
          commit-message: "CI: bumps version to {{version}} [skip ci]"
          tag-prefix:  '${{ inputs.plugin }}/v'
          major-wording: 'MAJOR'
          minor-wording: 'MINOR'
          preid: 'alpha'
          target-branch: ${{ github.ref_name }} # need to map it to main branch
      - name: Extract Module Changelog Sections from PR Description
        id: update-changelog
        run: |
          # Extract PR body content
          echo "$PR_BODY" > pr_body.txt          
          
          # Initialize an empty CHANGELOG variable             
          CHANGELOG=$(sed -n '/### ${{ inputs.plugin }} Changelog Begin/,/^### dai-/p' pr_body.txt   | sed '1d;$d')
          # Verify extraction result          
          echo -e "Captured Changelog Sections:\n$CHANGELOG"      
          # Set the new changelog header with version and date
          NEW_ENTRY="## [${{ steps.version-bump.outputs.newTag }}](https://github.com/digital-ai/backstage-release/tree/${{ steps.version-bump.outputs.newTag }}) ($(date +'%Y-%m-%d'))\n$CHANGELOG"
          
          # Prepend the new changelog entry to the top of the existing CHANGELOG.md
          echo -e "$NEW_ENTRY" | cat - ${{ inputs.plugin-path }}/CHANGE_LOG.md > temp_CHANGELOG.md && mv temp_CHANGELOG.md ${{ inputs.plugin-path }}/CHANGE_LOG.md

        env:
          PR_BODY: ${{ github.event.pull_request.body }}
      - name: Commit and Push Updated Changelogs
        id: commit-changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add ${{ inputs.plugin-path }}/CHANGE_LOG.md
          git commit -m "Update ${{ inputs.plugin }}CHANGE_LOG.md files"
          git push origin ${{ github.ref_name }} # need to map it to main branch          

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [ bump-version ]
    if: needs.bump-version.outputs.new-version != ''
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # necessary to get newly created tag above
          ref: ${{ github.ref_name }}  # need to map it to main branch
      - name: New Version
        working-directory: ${{ inputs.plugin-path }}
        env:
          NEW_VERSION: ${{ steps.bump-version.outputs.new-version }}
        run: echo "new version $NEW_VERSION"

      - name: Create tag and release
        uses: ncipollo/release-action@v1
        env:
          PACKAGEJSON_DIR: ${{ inputs.plugin-path }}
        with:
          name: ${{ needs.bump-version.outputs.new-version }}
          tag: ${{ needs.bump-version.outputs.new-version }}
